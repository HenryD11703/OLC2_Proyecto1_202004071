Codigo = Declaracion*

Declaracion = Variable
            | Matrix
            | Array
            | FuncDcl
            | Statement
            | Struct
            | StructVar

StructVar = Identificador Identificador "=" Expresion ";"
          | Identificador Identificador ";"

Struct = "struct" Identificador "{" Declaracion* "}" ";"

Matrix = ("int" | "float" | "string" | "boolean" | "char") "[" "]" ("[" "]")+ Identificador "=" "{" ListaMatrix "}" ";"
       | ("int" | "float" | "string" | "boolean" | "char") "[" "]" ("[" "]")+ Identificador "=" "new" ("int" | "float" | "string" | "boolean" | "char") "[" Expresion "]" ("[" Expresion "]")* ";"

ListaMatrix = "{" ListaMatrix "}" ("," "{" ListaMatrix "}")*
            | Argumentos

FuncDcl = ("int[]" | "float[]" | "string[]" | "boolean[]" | "char[]" | "int" | "float" | "string" | "boolean" | "char" | "void") Identificador "(" Parametros? ")" Bloque

Parametros = ("int[]" | "float[]" | "string[]" | "boolean[]" | "char[]" | "int" | "float" | "string" | "boolean" | "char") Identificador ("," ("int[]" | "float[]" | "string[]" | "boolean[]" | "char[]" | "int" | "float" | "string" | "boolean" | "char") Identificador)*

Array = ("int" | "float" | "string" | "boolean" | "char") "[" "]" Identificador "=" "{" Argumentos "}" ";"
      | ("int" | "float" | "string" | "boolean" | "char") "[" "]" Identificador "=" "new" ("int" | "float" | "string" | "boolean" | "char") "[" Expresion "]" ";"
      | ("int" | "float" | "string" | "boolean" | "char") "[" "]" Identificador "=" Identificador ";"

Variable = "var" Identificador "=" Expresion ";"
         | ("int" | "float" | "string" | "boolean" | "char") Identificador "=" Expresion ";"
         | ("int" | "float" | "string" | "boolean" | "char") Identificador ";"

Statement = "System.out.println(" ArgumentosPrint ")" ";"
          | Bloque
          | IFStmt
          | WhileStmt
          | ForStmt
          | SwtchStmt
          | "break" ";"
          | "continue" ";"
          | "return" Expresion? ";"
          | Expresion ";"

SwtchStmt = "switch" "(" Expresion ")" "{" Case* Default? "}"

Case = "case" Expresion ":" Declaracion*

Default = "default" ":" Declaracion*

ForStmt = "for" "(" InitFor Expresion ";" Expresion ")" Statement
        | "for" "(" ("int" | "float" | "string" | "boolean" | "char" | "var") Identificador ":" Expresion ")" Statement

InitFor = Variable
        | Expresion ";"
        | ";"

WhileStmt = "while" "(" Expresion ")" Statement

IFStmt = "if" "(" Expresion ")" Statement ("else" Statement)?

Bloque = "{" Declaracion* "}"

ArgumentosPrint = Expresion ("," Expresion)*

Identificador = [a-zA-Z_][a-zA-Z0-9_]*

Expresion = Asignacion
          | AsignacionConDosP

Asignacion = Identificador "[" Expresion "]" ("[" Expresion "]")+ ("+=" | "-=" | "=") Asignacion
           | Identificador "[" Expresion "]" ("+=" | "-=" | "=") Asignacion
           | Identificador ("+=" | "-=" | "=") Asignacion
           | TernaryOp

AsignacionConDosP = Identificador ":" AsignacionConDosP
                  | TernaryOp

TernaryOp = OperacionOr "?" Expresion ":" Expresion
          | OperacionOr

OperacionOr = OperacionAnd ("||" OperacionAnd)*

OperacionAnd = OperacionComparar ("&&" OperacionComparar)*

OperacionComparar = OperacionRelacional (("!=" | "==") OperacionRelacional)*

OperacionRelacional = Operacion (("<=" | ">=" | ">" | "<") Operacion)*

Operacion = OperacionM (("+" | "-") OperacionM)*

OperacionM = UnariOp (("/" | "*" | "%") UnariOp)*

UnariOp = ("!" | "-") UnariOp
        | Call

Call = "typeof" Nativo
     | Nativo ("(" Argumentos? ")")*

Argumentos = Expresion ("," Expresion)*

Nativo = [0-9]+ "." [0-9]+
       | [0-9]+
       | "true"
       | "false"
       | "null"
       | '"' ([^"\\] | "\\" .)* '"'
       | "'" . "'"
       | "(" Expresion ")"
       | "[" Expresion "]"
       | Identificador "[" Expresion "]" ("[" Expresion "]")+
       | Identificador "[" Expresion "]"
       | Identificador ".indexOf(" Expresion ")"
       | Identificador ".join(" ")"
       | Identificador ".length"
       | Identificador "{" Argumentos* "}"
       | Identificador